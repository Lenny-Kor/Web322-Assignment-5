const express = require('express');
const handlebars = require('express-handlebars');
const blogService = require('./blog-service');

const app = express();
const hbs = handlebars.create({defaultLayout: 'main'});

app.engine('handlebars', hbs.engine);
app.set('view engine', 'handlebars');

app.use(express.json());
app.use(express.urlencoded({extended: true}));

app.get('/', (req, res) => {
  res.render('home');
});

app.get('/posts', (req, res) => {
  blogService.getPosts().then(posts => res.render('posts', {posts}));
});

app.get('/posts/add', (req, res) => {
  blogService.getCategories().then(categories => res.render('addPost', {categories}));
});

app.post('/posts/add', (req, res) => {
  blogService.addPost(req.body).then(() => res.redirect('/posts')).catch(err => res.status(500).send(err));
});

app.get('/categories', (req, res) => {
  blogService.getCategories().then(categories => res.render('categories', {categories}));
});

app.get('/categories/add', (req, res) => {
  res.render('addCategory');
});

app.post('/categories/add', (req, res) => {
  blogService.addCategory(req.body).then(() => res.redirect('/categories')).catch(err => res.status(500).send(err));
});

app.get('/categories/delete/:id', (req, res) => {
  blogService.deleteCategoryById(req.params.id).then(() => res.redirect('/categories')).catch(err => res.status(500).send("Unable to Remove Category / Category not found"));
});

app.get('/posts/delete/:id', (req, res) => {
  blogService.deletePostById(req.params.id).then(() => res.redirect('/posts')).catch(err => res.status(500).send("Unable to Remove Post / Post not found"));
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server listening on port ${PORT}`));
